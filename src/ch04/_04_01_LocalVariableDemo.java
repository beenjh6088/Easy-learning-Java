/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
Path : 
	Chapter 04. 객체 지향
	04. 클래스의 구성 요소와 멤버 접근
Description : 
	01. 클래스의 멤버 : 필드, 메서드
	02. 필드와 지역변수 차이
		01] 초기화 생략 후 컴파일 가능 여부
		02] 스코프
		03] 접근 지정자 제한 : 필드는 모든 접근 지정자 사용 가능하지만, 지역 변수는 final로만 지정가능
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
*/
package ch04;

public class _04_01_LocalVariableDemo {
	
	@SuppressWarnings("unused")
	public static void main(String[] args) {
		
		int a = 0;
		double b;
		
		//System.out.println(b); 지역변수는 초기화하지 않고 컴파일 불가
		
		int c = 0;
		
		//public double d = 0.0; 지역변수는 접근 지정자를 final만 선택할 수 있다
		
		for (int e = 0; e < 10; e++) {
			//int a = 1; 이미 선언된 변수 이름. 멤버변수와 지역변수는 이름이 같아도 1번 중복 허용. this로 멤버변수와 지역변수 구분.
			System.out.println(e);
		}
	}
}
